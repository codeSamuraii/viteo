[build-system]
requires = ["scikit-build-core", "nanobind", "setuptools"]
build-backend = "scikit_build_core.build"

[project]
name = "viteo"
version = "0.1.1"
description = "Hardware-accelerated video frame extraction for Apple Silicon"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Rémi Héneault", email = "remi@heneault.fr"}
]
keywords = [
    "video", "frame-extraction", "apple-silicon", "mlx",
    "avfoundation", "videotoolbox", "hardware-acceleration",
    "computer-vision", "video-processing"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: C++",
    "Programming Language :: Objective C",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Multimedia :: Video",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mlx",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "opencv-python",
]
test = [
    "pytest",
    "opencv-python",
]

[project.urls]
Homepage = "https://github.com/codeSamuraii/viteo"
Repository = "https://github.com/codeSamuraii/viteo"
Documentation = "https://github.com/codeSamuraii/viteo#readme"
Issues = "https://github.com/codeSamuraii/viteo/issues"

[tool.scikit-build]
cmake.build-type = "Release"
wheel.packages = ["src/viteo"]

[tool.scikit-build.cmake.define]
CMAKE_OSX_ARCHITECTURES = "arm64"

[tool.cibuildwheel]
skip = ["*-win32", "*-win_amd64", "*-linux*", "*-musllinux*", "pp*"]
build = ["cp310-*", "cp311-*", "cp312-*", "cp313-*"]

[tool.cibuildwheel.macos]
archs = ["arm64"]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
cache_dir = "/tmp/pytest_cache"
addopts = "-ra -v"
testpaths = ["tests"]